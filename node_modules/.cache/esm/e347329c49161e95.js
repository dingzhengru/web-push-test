let express,cors,fs,webpush;_491‍.w("express",[["default",["express"],function(v){express=v}]]);_491‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_491‍.w("fs",[["default",["fs"],function(v){fs=v}]]);_491‍.w("web-push",[["default",["webpush"],function(v){webpush=v}]]);




const app = express();
const port = 3000;

app.use(express.urlencoded({ extended: true })); // for parsing application/x-www-form-urlencoded
app.use(express.json()); // for parsing application/json
app.use(cors());

//* VAPID keys should only be generated only once.
//* 產生一組後，存起來，就將此方法註解掉，或是執行 gen-vapid-keys 來產生並建立檔案
// const vapidKeys = webpush.generateVAPIDKeys();

const publicKey = fs.readFileSync('./publicKey', 'utf-8');
const privateKey = fs.readFileSync('./publicKey', 'utf-8');

_491‍.g.console.log('[PublicKey]', publicKey);
_491‍.g.console.log('[PrivateKey]', privateKey);

//* 放置 GCM KEY
webpush.setGCMAPIKey('184131655084');
webpush.setVapidDetails('mailto:qws7869vdx@gmail.com', publicKey, privateKey);

app.get('/keys', (req, res) => {
  const responseData = { publicKey, privateKey };

  res.json(responseData);
});

app.post('/push-message', (req, res) => {
  const subscriptionData = req.body.data;

  console.log('[push-message]');

  //* This is the same output of calling JSON.stringify on a PushSubscription
  const pushSubscription = {
    endpoint: subscriptionData.endpoint,
    keys: {
      p256dh: subscriptionData.keys.p256dh,
      auth: subscriptionData.keys.auth,
    },
  };

  webpush.sendNotification(pushSubscription, 'Your Push Payload Text');

  res.json(true);
});

app.listen(port, () => {
  console.log(`http://localhost:${port}`);
});
